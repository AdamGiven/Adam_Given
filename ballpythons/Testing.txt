/*
Testing Instructions:

1. Access the index.php to begin viewing the site. The site should send you to the login page if you attempt to circumvent registration and login. (index.php)

2. Use the Register form to create an account. The form uses a regular expression to ensure the email is in one of the following forms.
   test@email.com, test12@email.com. (This creates the "snakeDB" database and the "members" table then adds the data to the database table.)
   The script should ensure that the password is at least 6 characters long and that the confimation password matches. (register.php)
   
3. Use the login form to login. If login is successful you should be directed to the main page using the dynamic home content.(home.html)
   (This is where the morph table is created and the records are added from the morphs.txt file.) (login.php)
   
4. (Dynamic content) The genes dynamic content shows a table of how the genes works (genes.html)

5. (Dynamic content) This page uses a script to load the morphs from the database morphs table and show it in a table. (morphs.php)

6. (Dynamic content) This page allows you to create a collection of your favorite morphs by clicking the "create collection" button.
    The "Create Collection" button should be replaced with the form to add, remove, and show your collection if a collection exists for the current user.
	(This creates a table named by your email before the @ symbole. EXAMPLE: test@email.com makes a tables called "test".)
	Select a morph from the dropdown and click "add" to add to your collection and remove from the collection.
	Click the "Show Collection" button to view your collection. Click the collection nav button to return to the add/remove form.
	(This insert or remove a record the email named database table.)(collection.php)

7. Click the logout button to logout. This should return you to the login.

NOTE:I realize that if one user has the same email prefix before the @ symbol it would cause a problem when they try to create a collection. However one of the
assigment topics is to manipulate and format strings, so I decided to demostrate this by using it to format the email string to create a table name.
For the purposes of this assignment it shouldn't be a problem. Normally I would simply have the user create a unique unsername when they register.
*/

